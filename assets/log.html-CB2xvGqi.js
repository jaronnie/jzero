import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app-D9T9Z2oH.js";const e={},o=t(`<div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>DownloadLogic<span class="token punctuation">)</span> <span class="token function">Download</span><span class="token punctuation">(</span>req <span class="token operator">*</span>types<span class="token punctuation">.</span>DownloadRequest<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span>
    l<span class="token punctuation">.</span>Logger<span class="token punctuation">.</span><span class="token function">Infof</span><span class="token punctuation">(</span><span class="token string">&quot;download req: %v&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">)</span>

    body<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span><span class="token string">&quot;./filedata&quot;</span><span class="token punctuation">,</span> req<span class="token punctuation">.</span>File<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>

    n<span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>writer<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> err
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token function">len</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> io<span class="token punctuation">.</span>ErrClosedPipe
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到日志输入如下</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span><span class="token property">&quot;@timestamp&quot;</span><span class="token operator">:</span><span class="token string">&quot;2024-04-19T11:35:21.162+08:00&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;caller&quot;</span><span class="token operator">:</span><span class="token string">&quot;file/downloadlogic.go:33&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;download 1.txt&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;level&quot;</span><span class="token operator">:</span><span class="token string">&quot;info&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;span&quot;</span><span class="token operator">:</span><span class="token string">&quot;0b14fa2849e40b50&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;trace&quot;</span><span class="token operator">:</span><span class="token string">&quot;a5d80df568e66150ed6d461d324f05b1&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中 logc 传入了 l.ctx 在打印后可以看到这条日志带上了 trace, 可以更好的追踪.</p><p>jzero 对于日志打印的规范:</p><ul><li>请采用 logic 中 自带的 logger</li></ul>`,6),p=[o];function c(l,i){return s(),a("div",null,p)}const d=n(e,[["render",c],["__file","log.html.vue"]]),k=JSON.parse('{"path":"/guide/develop/log.html","title":"日志打印规范","lang":"zh-CN","frontmatter":{"title":"日志打印规范","icon":"puzzle-piece","star":true,"order":4,"category":"开发","tag":["Guide"],"description":"可以看到日志输入如下 其中 logc 传入了 l.ctx 在打印后可以看到这条日志带上了 trace, 可以更好的追踪. jzero 对于日志打印的规范: 请采用 logic 中 自带的 logger","head":[["meta",{"property":"og:url","content":"https://jaronnie.github.io/jzero/guide/develop/log.html"}],["meta",{"property":"og:site_name","content":"Jzero Framework"}],["meta",{"property":"og:title","content":"日志打印规范"}],["meta",{"property":"og:description","content":"可以看到日志输入如下 其中 logc 传入了 l.ctx 在打印后可以看到这条日志带上了 trace, 可以更好的追踪. jzero 对于日志打印的规范: 请采用 logic 中 自带的 logger"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-19T05:45:01.000Z"}],["meta",{"property":"article:author","content":"jaronnie"}],["meta",{"property":"article:tag","content":"Guide"}],["meta",{"property":"article:modified_time","content":"2024-04-19T05:45:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"日志打印规范\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-19T05:45:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"jaronnie\\",\\"url\\":\\"https://github.com/jaronnie\\"}]}"]]},"headers":[],"git":{"createdTime":1713505501000,"updatedTime":1713505501000,"contributors":[{"name":"jaronnie","email":"jaron@jaronnie.com","commits":1}]},"readingTime":{"minutes":0.47,"words":142},"filePathRelative":"guide/develop/log.md","localizedDate":"2024年4月19日","autoDesc":true}');export{d as comp,k as data};
