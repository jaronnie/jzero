import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,b as t}from"./app--ZFwTmN-.js";const e={},o=t(`<p>jzero 推荐使用 go-zero sqlx 完成对数据库的 crud 操作.</p><p>jzero 数据库规范:</p><ul><li>sql 文件放在 desc/sql</li><li>生成的 model 放在 internal/model</li></ul><p>jzero gen 时会自动检测 desc/sql 下的 sql 文件, 并将生成的 model 放在 internal/model 下</p><p>另外推荐使用 sql-builder 完成对 sql 的拼接. 如获取凭证列表以及支持过滤参数</p><h2 id="将默认生成的-crud-代码替换为使用-sql-builder-的方式" tabindex="-1"><a class="header-anchor" href="#将默认生成的-crud-代码替换为使用-sql-builder-的方式"><span>将默认生成的 crud 代码替换为使用 sql-builder 的方式</span></a></h2><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/jzero-io/sqlbuilder-zero
<span class="token function">cp</span> <span class="token parameter variable">-r</span> sqlbuilder-zero/templates/go-zero/model ~/.jzero/<span class="token variable">$Version</span>/go-zero
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>go get github.com/huandu/go-sqlbuilder
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-ext="go" data-title="go"><pre class="language-go"><code><span class="token keyword">func</span> <span class="token punctuation">(</span>m <span class="token operator">*</span>customCredentialModel<span class="token punctuation">)</span> <span class="token function">CredentialList</span><span class="token punctuation">(</span>ctx context<span class="token punctuation">.</span>Context<span class="token punctuation">,</span> options <span class="token operator">*</span>credentialpb<span class="token punctuation">.</span>CredentialListRequest<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>Credential<span class="token punctuation">,</span> <span class="token builtin">int64</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	sb <span class="token operator">:=</span> sqlbuilder<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>table<span class="token punctuation">)</span>
	countsb <span class="token operator">:=</span> sqlbuilder<span class="token punctuation">.</span><span class="token function">Select</span><span class="token punctuation">(</span><span class="token string">&quot;count(*)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">From</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>table<span class="token punctuation">)</span>

	<span class="token keyword">if</span> options<span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span>
		sb<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">Like</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		countsb<span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">Like</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">GetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	sb<span class="token punctuation">.</span><span class="token function">Limit</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">GetSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Offset</span><span class="token punctuation">(</span><span class="token function">int</span><span class="token punctuation">(</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">GetPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> options<span class="token punctuation">.</span><span class="token function">GetSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

	<span class="token keyword">var</span> credentials <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">*</span>Credential

	err <span class="token operator">:=</span> m<span class="token punctuation">.</span>conn<span class="token punctuation">.</span><span class="token function">QueryRowsCtx</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>credentials<span class="token punctuation">,</span> sb<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>

	<span class="token comment">// get total</span>
	<span class="token keyword">var</span> total <span class="token builtin">int64</span>
	err <span class="token operator">=</span> m<span class="token punctuation">.</span>conn<span class="token punctuation">.</span><span class="token function">QueryRowCtx</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token operator">&amp;</span>total<span class="token punctuation">,</span> countsb<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> err
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> credentials<span class="token punctuation">,</span> total<span class="token punctuation">,</span> <span class="token boolean">nil</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),p=[o];function c(l,i){return s(),a("div",null,p)}const d=n(e,[["render",c],["__file","model.html.vue"]]),k=JSON.parse('{"path":"/guide/develop/model.html","title":"model 数据库","lang":"zh-CN","frontmatter":{"title":"model 数据库","icon":"puzzle-piece","star":true,"order":5,"category":"开发","tag":["Guide"],"description":"jzero 推荐使用 go-zero sqlx 完成对数据库的 crud 操作. jzero 数据库规范: sql 文件放在 desc/sql 生成的 model 放在 internal/model jzero gen 时会自动检测 desc/sql 下的 sql 文件, 并将生成的 model 放在 internal/model 下 另外推荐使用 s...","head":[["meta",{"property":"og:url","content":"https://jzero.jaronnie.com/guide/develop/model.html"}],["meta",{"property":"og:site_name","content":"Jzero Framework"}],["meta",{"property":"og:title","content":"model 数据库"}],["meta",{"property":"og:description","content":"jzero 推荐使用 go-zero sqlx 完成对数据库的 crud 操作. jzero 数据库规范: sql 文件放在 desc/sql 生成的 model 放在 internal/model jzero gen 时会自动检测 desc/sql 下的 sql 文件, 并将生成的 model 放在 internal/model 下 另外推荐使用 s..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-20T16:28:50.000Z"}],["meta",{"property":"article:author","content":"jaronnie"}],["meta",{"property":"article:tag","content":"Guide"}],["meta",{"property":"article:modified_time","content":"2024-06-20T16:28:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"model 数据库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-20T16:28:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"jaronnie\\",\\"url\\":\\"https://github.com/jaronnie\\"}]}"]]},"headers":[{"level":2,"title":"将默认生成的 crud 代码替换为使用 sql-builder 的方式","slug":"将默认生成的-crud-代码替换为使用-sql-builder-的方式","link":"#将默认生成的-crud-代码替换为使用-sql-builder-的方式","children":[]}],"git":{"createdTime":1713851121000,"updatedTime":1718900930000,"contributors":[{"name":"jaronnie","email":"jaron@jaronnie.com","commits":4}]},"readingTime":{"minutes":0.75,"words":225},"filePathRelative":"guide/develop/model.md","localizedDate":"2024年4月23日","autoDesc":true}');export{d as comp,k as data};
